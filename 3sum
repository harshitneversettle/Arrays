class Solution {
public:
vector<vector<int>> result ;
void twosum(vector<int>& nums , int target , int i , int j ){
    while( i < j ){
        if( nums[i] + nums[j] < target ) i++ ;
        else if ( nums[i] + nums[j] > target ) j-- ;
        else {
            result.push_back({-target , nums[i] , nums[j]}) ;
            while( i < j && nums[i] == nums[i+1]) i++ ;
            while( i < j && nums[j] == nums[j-1]) j-- ;

            i++ ;
            j-- ;
        }
    }
}
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size() ;
        sort(begin(nums) , end(nums)) ;
        if( n < 3 ) return {} ;
        for( int i = 0 ; i <= n-1 ; i++ ){
            if( i > 0 && nums[i] == nums[i-1]){
               
                continue ;
            }
            int n1 = nums[i] ;
            int target = -n1 ;      // n1 + n2 + n3 = 0   ==>  n2 + n3 = -n1 
            twosum( nums , target , i+1 , n-1 ) ; 
        }
        return result ;
    }
};
